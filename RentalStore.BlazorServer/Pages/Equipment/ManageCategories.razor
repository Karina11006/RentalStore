@page "/manage-equipment/categories"
@inherits LayoutComponentBase
@inject ICategoryService CategoryService
@inject IToastService ToastService
@inject IJSRuntime _js

<div class="d-flex justify-content-between align-items-center mb-3">
    <h3>Manage Categories</h3>
    <button class="btn btn-primary" @onclick="ShowAddModal">Add Category</button>
</div>

@if (categories == null)
{
    <p>Loading...</p>
}
else if (!categories.Any())
{
    <p>No categories found.</p>
}
else
{
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Description</th>
                <th>Default Image</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td>@category.CategoryId</td>
                    <td>@category.CategoryName</td>
                    <td>@category.Description</td>
                    <td><img src="@category.ImageUrl" width="24"></td>
                    <td>
                        <button class="btn btn-warning btn-sm" @onclick="() => ShowEditModal(category)">Edit</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteCategory(category.CategoryId)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<AddOrUpdateCategory @ref="addEditModal" OnSubmit="RefreshCategories" />

@code {
    private IEnumerable<CategoryDto> categories;
    private AddOrUpdateCategory addEditModal;

    protected override void OnInitialized()
    {
        LoadCategories();
    }

    private void LoadCategories()
    {
        categories = CategoryService.GetAll();
    }

    private async Task DeleteCategory(int id)
    {
        var confirm = await _js.InvokeAsync<bool>("confirm", $"Are You Sure You Want To Delete {categories.FirstOrDefault(r => r.CategoryId==id).CategoryName}?");
        if (confirm)
        {
            ToastService.ShowWarning($"{categories.FirstOrDefault(r => r.CategoryId==id).CategoryName} has been removed");
            CategoryService.Delete(id);
            LoadCategories();
        }
    }

    private void ShowAddModal()
    {
        addEditModal.Show();
    }

    private void ShowEditModal(CategoryDto category)
    {
        addEditModal.Show(category);
    }

    private void RefreshCategories()
    {
        LoadCategories();
    }
}
